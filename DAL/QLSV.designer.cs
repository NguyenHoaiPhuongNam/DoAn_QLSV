#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLSV")]
	public partial class QLSVDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertDangKy(DangKy instance);
    partial void UpdateDangKy(DangKy instance);
    partial void DeleteDangKy(DangKy instance);
    partial void InsertDiemRenLuyen(DiemRenLuyen instance);
    partial void UpdateDiemRenLuyen(DiemRenLuyen instance);
    partial void DeleteDiemRenLuyen(DiemRenLuyen instance);
    partial void InsertGiangVien(GiangVien instance);
    partial void UpdateGiangVien(GiangVien instance);
    partial void DeleteGiangVien(GiangVien instance);
    partial void InsertHocKy(HocKy instance);
    partial void UpdateHocKy(HocKy instance);
    partial void DeleteHocKy(HocKy instance);
    partial void InsertHocPhan(HocPhan instance);
    partial void UpdateHocPhan(HocPhan instance);
    partial void DeleteHocPhan(HocPhan instance);
    partial void InsertHocPhi(HocPhi instance);
    partial void UpdateHocPhi(HocPhi instance);
    partial void DeleteHocPhi(HocPhi instance);
    partial void InsertKhoa(Khoa instance);
    partial void UpdateKhoa(Khoa instance);
    partial void DeleteKhoa(Khoa instance);
    partial void InsertLopHoc(LopHoc instance);
    partial void UpdateLopHoc(LopHoc instance);
    partial void DeleteLopHoc(LopHoc instance);
    partial void InsertNganh(Nganh instance);
    partial void UpdateNganh(Nganh instance);
    partial void DeleteNganh(Nganh instance);
    partial void InsertPhanCongGiangVien(PhanCongGiangVien instance);
    partial void UpdatePhanCongGiangVien(PhanCongGiangVien instance);
    partial void DeletePhanCongGiangVien(PhanCongGiangVien instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertSinhVienViPham(SinhVienViPham instance);
    partial void UpdateSinhVienViPham(SinhVienViPham instance);
    partial void DeleteSinhVienViPham(SinhVienViPham instance);
    partial void InsertThoiKhoaBieu(ThoiKhoaBieu instance);
    partial void UpdateThoiKhoaBieu(ThoiKhoaBieu instance);
    partial void DeleteThoiKhoaBieu(ThoiKhoaBieu instance);
    #endregion
		
		public QLSVDataContext() : 
				base(global::DAL.Properties.Settings.Default.QLSVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLSVDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSVDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<DangKy> DangKies
		{
			get
			{
				return this.GetTable<DangKy>();
			}
		}
		
		public System.Data.Linq.Table<DiemRenLuyen> DiemRenLuyens
		{
			get
			{
				return this.GetTable<DiemRenLuyen>();
			}
		}
		
		public System.Data.Linq.Table<GiangVien> GiangViens
		{
			get
			{
				return this.GetTable<GiangVien>();
			}
		}
		
		public System.Data.Linq.Table<HocKy> HocKies
		{
			get
			{
				return this.GetTable<HocKy>();
			}
		}
		
		public System.Data.Linq.Table<HocPhan> HocPhans
		{
			get
			{
				return this.GetTable<HocPhan>();
			}
		}
		
		public System.Data.Linq.Table<HocPhi> HocPhis
		{
			get
			{
				return this.GetTable<HocPhi>();
			}
		}
		
		public System.Data.Linq.Table<Khoa> Khoas
		{
			get
			{
				return this.GetTable<Khoa>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc> LopHocs
		{
			get
			{
				return this.GetTable<LopHoc>();
			}
		}
		
		public System.Data.Linq.Table<Nganh> Nganhs
		{
			get
			{
				return this.GetTable<Nganh>();
			}
		}
		
		public System.Data.Linq.Table<PhanCongGiangVien> PhanCongGiangViens
		{
			get
			{
				return this.GetTable<PhanCongGiangVien>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<SinhVienViPham> SinhVienViPhams
		{
			get
			{
				return this.GetTable<SinhVienViPham>();
			}
		}
		
		public System.Data.Linq.Table<ThoiKhoaBieu> ThoiKhoaBieus
		{
			get
			{
				return this.GetTable<ThoiKhoaBieu>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maAccount;
		
		private string _username;
		
		private string _pword;
		
		private string _trangthai;
		
		private EntitySet<SinhVien> _SinhViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaAccountChanging(string value);
    partial void OnmaAccountChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpwordChanging(string value);
    partial void OnpwordChanged();
    partial void OntrangthaiChanging(string value);
    partial void OntrangthaiChanged();
    #endregion
		
		public Account()
		{
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maAccount", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maAccount
		{
			get
			{
				return this._maAccount;
			}
			set
			{
				if ((this._maAccount != value))
				{
					this.OnmaAccountChanging(value);
					this.SendPropertyChanging();
					this._maAccount = value;
					this.SendPropertyChanged("maAccount");
					this.OnmaAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pword", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string pword
		{
			get
			{
				return this._pword;
			}
			set
			{
				if ((this._pword != value))
				{
					this.OnpwordChanging(value);
					this.SendPropertyChanging();
					this._pword = value;
					this.SendPropertyChanged("pword");
					this.OnpwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangthai", DbType="NVarChar(100)")]
		public string trangthai
		{
			get
			{
				return this._trangthai;
			}
			set
			{
				if ((this._trangthai != value))
				{
					this.OntrangthaiChanging(value);
					this.SendPropertyChanging();
					this._trangthai = value;
					this.SendPropertyChanged("trangthai");
					this.OntrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SinhVien", Storage="_SinhViens", ThisKey="maAccount", OtherKey="account")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Account1 = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Account1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangKy")]
	public partial class DangKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maSv;
		
		private string _maHocPhan;
		
		private string _maHocKy;
		
		private System.Nullable<double> _diemQuaTrinh;
		
		private System.Nullable<double> _diemThi;
		
		private System.Nullable<double> _diemTongKet;
		
		private string _trangthai;
		
		private EntityRef<HocKy> _HocKy;
		
		private EntityRef<HocPhan> _HocPhan;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSvChanging(string value);
    partial void OnmaSvChanged();
    partial void OnmaHocPhanChanging(string value);
    partial void OnmaHocPhanChanged();
    partial void OnmaHocKyChanging(string value);
    partial void OnmaHocKyChanged();
    partial void OndiemQuaTrinhChanging(System.Nullable<double> value);
    partial void OndiemQuaTrinhChanged();
    partial void OndiemThiChanging(System.Nullable<double> value);
    partial void OndiemThiChanged();
    partial void OndiemTongKetChanging(System.Nullable<double> value);
    partial void OndiemTongKetChanged();
    partial void OntrangthaiChanging(string value);
    partial void OntrangthaiChanged();
    #endregion
		
		public DangKy()
		{
			this._HocKy = default(EntityRef<HocKy>);
			this._HocPhan = default(EntityRef<HocPhan>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSv", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maSv
		{
			get
			{
				return this._maSv;
			}
			set
			{
				if ((this._maSv != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSvChanging(value);
					this.SendPropertyChanging();
					this._maSv = value;
					this.SendPropertyChanged("maSv");
					this.OnmaSvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHocPhan", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maHocPhan
		{
			get
			{
				return this._maHocPhan;
			}
			set
			{
				if ((this._maHocPhan != value))
				{
					if (this._HocPhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHocPhanChanging(value);
					this.SendPropertyChanging();
					this._maHocPhan = value;
					this.SendPropertyChanged("maHocPhan");
					this.OnmaHocPhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHocKy", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maHocKy
		{
			get
			{
				return this._maHocKy;
			}
			set
			{
				if ((this._maHocKy != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHocKyChanging(value);
					this.SendPropertyChanging();
					this._maHocKy = value;
					this.SendPropertyChanged("maHocKy");
					this.OnmaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diemQuaTrinh", DbType="Float")]
		public System.Nullable<double> diemQuaTrinh
		{
			get
			{
				return this._diemQuaTrinh;
			}
			set
			{
				if ((this._diemQuaTrinh != value))
				{
					this.OndiemQuaTrinhChanging(value);
					this.SendPropertyChanging();
					this._diemQuaTrinh = value;
					this.SendPropertyChanged("diemQuaTrinh");
					this.OndiemQuaTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diemThi", DbType="Float")]
		public System.Nullable<double> diemThi
		{
			get
			{
				return this._diemThi;
			}
			set
			{
				if ((this._diemThi != value))
				{
					this.OndiemThiChanging(value);
					this.SendPropertyChanging();
					this._diemThi = value;
					this.SendPropertyChanged("diemThi");
					this.OndiemThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diemTongKet", AutoSync=AutoSync.Always, DbType="Float", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> diemTongKet
		{
			get
			{
				return this._diemTongKet;
			}
			set
			{
				if ((this._diemTongKet != value))
				{
					this.OndiemTongKetChanging(value);
					this.SendPropertyChanging();
					this._diemTongKet = value;
					this.SendPropertyChanged("diemTongKet");
					this.OndiemTongKetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangthai", AutoSync=AutoSync.Always, DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string trangthai
		{
			get
			{
				return this._trangthai;
			}
			set
			{
				if ((this._trangthai != value))
				{
					this.OntrangthaiChanging(value);
					this.SendPropertyChanging();
					this._trangthai = value;
					this.SendPropertyChanged("trangthai");
					this.OntrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_DangKy", Storage="_HocKy", ThisKey="maHocKy", OtherKey="maHocKy", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.DangKies.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.DangKies.Add(this);
						this._maHocKy = value.maHocKy;
					}
					else
					{
						this._maHocKy = default(string);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocPhan_DangKy", Storage="_HocPhan", ThisKey="maHocPhan", OtherKey="maHocPhan", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HocPhan HocPhan
		{
			get
			{
				return this._HocPhan.Entity;
			}
			set
			{
				HocPhan previousValue = this._HocPhan.Entity;
				if (((previousValue != value) 
							|| (this._HocPhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocPhan.Entity = null;
						previousValue.DangKies.Remove(this);
					}
					this._HocPhan.Entity = value;
					if ((value != null))
					{
						value.DangKies.Add(this);
						this._maHocPhan = value.maHocPhan;
					}
					else
					{
						this._maHocPhan = default(string);
					}
					this.SendPropertyChanged("HocPhan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DangKy", Storage="_SinhVien", ThisKey="maSv", OtherKey="maSv", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.DangKies.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.DangKies.Add(this);
						this._maSv = value.maSv;
					}
					else
					{
						this._maSv = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiemRenLuyen")]
	public partial class DiemRenLuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maSv;
		
		private string _maHocKy;
		
		private int _diem;
		
		private EntityRef<HocKy> _HocKy;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSvChanging(string value);
    partial void OnmaSvChanged();
    partial void OnmaHocKyChanging(string value);
    partial void OnmaHocKyChanged();
    partial void OndiemChanging(int value);
    partial void OndiemChanged();
    #endregion
		
		public DiemRenLuyen()
		{
			this._HocKy = default(EntityRef<HocKy>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSv", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maSv
		{
			get
			{
				return this._maSv;
			}
			set
			{
				if ((this._maSv != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSvChanging(value);
					this.SendPropertyChanging();
					this._maSv = value;
					this.SendPropertyChanged("maSv");
					this.OnmaSvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHocKy", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maHocKy
		{
			get
			{
				return this._maHocKy;
			}
			set
			{
				if ((this._maHocKy != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHocKyChanging(value);
					this.SendPropertyChanging();
					this._maHocKy = value;
					this.SendPropertyChanged("maHocKy");
					this.OnmaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diem", DbType="Int NOT NULL")]
		public int diem
		{
			get
			{
				return this._diem;
			}
			set
			{
				if ((this._diem != value))
				{
					this.OndiemChanging(value);
					this.SendPropertyChanging();
					this._diem = value;
					this.SendPropertyChanged("diem");
					this.OndiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_DiemRenLuyen", Storage="_HocKy", ThisKey="maHocKy", OtherKey="maHocKy", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.DiemRenLuyens.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.DiemRenLuyens.Add(this);
						this._maHocKy = value.maHocKy;
					}
					else
					{
						this._maHocKy = default(string);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemRenLuyen", Storage="_SinhVien", ThisKey="maSv", OtherKey="maSv", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.DiemRenLuyens.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.DiemRenLuyens.Add(this);
						this._maSv = value.maSv;
					}
					else
					{
						this._maSv = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiangVien")]
	public partial class GiangVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maGiangVien;
		
		private string _hoTen;
		
		private System.DateTime _ngaySinh;
		
		private string _gioiTinh;
		
		private string _email;
		
		private string _sdt;
		
		private string _diaChi;
		
		private string _maKhoa;
		
		private EntitySet<LopHoc> _LopHocs;
		
		private EntitySet<PhanCongGiangVien> _PhanCongGiangViens;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaGiangVienChanging(string value);
    partial void OnmaGiangVienChanged();
    partial void OnhoTenChanging(string value);
    partial void OnhoTenChanged();
    partial void OnngaySinhChanging(System.DateTime value);
    partial void OnngaySinhChanged();
    partial void OngioiTinhChanging(string value);
    partial void OngioiTinhChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OnmaKhoaChanging(string value);
    partial void OnmaKhoaChanged();
    #endregion
		
		public GiangVien()
		{
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			this._PhanCongGiangViens = new EntitySet<PhanCongGiangVien>(new Action<PhanCongGiangVien>(this.attach_PhanCongGiangViens), new Action<PhanCongGiangVien>(this.detach_PhanCongGiangViens));
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maGiangVien", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maGiangVien
		{
			get
			{
				return this._maGiangVien;
			}
			set
			{
				if ((this._maGiangVien != value))
				{
					this.OnmaGiangVienChanging(value);
					this.SendPropertyChanging();
					this._maGiangVien = value;
					this.SendPropertyChanged("maGiangVien");
					this.OnmaGiangVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string hoTen
		{
			get
			{
				return this._hoTen;
			}
			set
			{
				if ((this._hoTen != value))
				{
					this.OnhoTenChanging(value);
					this.SendPropertyChanging();
					this._hoTen = value;
					this.SendPropertyChanged("hoTen");
					this.OnhoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaySinh", DbType="Date NOT NULL")]
		public System.DateTime ngaySinh
		{
			get
			{
				return this._ngaySinh;
			}
			set
			{
				if ((this._ngaySinh != value))
				{
					this.OnngaySinhChanging(value);
					this.SendPropertyChanging();
					this._ngaySinh = value;
					this.SendPropertyChanged("ngaySinh");
					this.OnngaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(250)")]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoa", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string maKhoa
		{
			get
			{
				return this._maKhoa;
			}
			set
			{
				if ((this._maKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhoaChanging(value);
					this.SendPropertyChanging();
					this._maKhoa = value;
					this.SendPropertyChanged("maKhoa");
					this.OnmaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_LopHoc", Storage="_LopHocs", ThisKey="maGiangVien", OtherKey="maGiangVien")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_PhanCongGiangVien", Storage="_PhanCongGiangViens", ThisKey="maGiangVien", OtherKey="maGiangVien")]
		public EntitySet<PhanCongGiangVien> PhanCongGiangViens
		{
			get
			{
				return this._PhanCongGiangViens;
			}
			set
			{
				this._PhanCongGiangViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_GiangVien", Storage="_Khoa", ThisKey="maKhoa", OtherKey="maKhoa", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.GiangViens.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.GiangViens.Add(this);
						this._maKhoa = value.maKhoa;
					}
					else
					{
						this._maKhoa = default(string);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
		
		private void attach_PhanCongGiangViens(PhanCongGiangVien entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_PhanCongGiangViens(PhanCongGiangVien entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocKy")]
	public partial class HocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maHocKy;
		
		private string _tenHocKy;
		
		private EntitySet<DangKy> _DangKies;
		
		private EntitySet<DiemRenLuyen> _DiemRenLuyens;
		
		private EntitySet<SinhVienViPham> _SinhVienViPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHocKyChanging(string value);
    partial void OnmaHocKyChanged();
    partial void OntenHocKyChanging(string value);
    partial void OntenHocKyChanged();
    #endregion
		
		public HocKy()
		{
			this._DangKies = new EntitySet<DangKy>(new Action<DangKy>(this.attach_DangKies), new Action<DangKy>(this.detach_DangKies));
			this._DiemRenLuyens = new EntitySet<DiemRenLuyen>(new Action<DiemRenLuyen>(this.attach_DiemRenLuyens), new Action<DiemRenLuyen>(this.detach_DiemRenLuyens));
			this._SinhVienViPhams = new EntitySet<SinhVienViPham>(new Action<SinhVienViPham>(this.attach_SinhVienViPhams), new Action<SinhVienViPham>(this.detach_SinhVienViPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHocKy", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maHocKy
		{
			get
			{
				return this._maHocKy;
			}
			set
			{
				if ((this._maHocKy != value))
				{
					this.OnmaHocKyChanging(value);
					this.SendPropertyChanging();
					this._maHocKy = value;
					this.SendPropertyChanged("maHocKy");
					this.OnmaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenHocKy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenHocKy
		{
			get
			{
				return this._tenHocKy;
			}
			set
			{
				if ((this._tenHocKy != value))
				{
					this.OntenHocKyChanging(value);
					this.SendPropertyChanging();
					this._tenHocKy = value;
					this.SendPropertyChanged("tenHocKy");
					this.OntenHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_DangKy", Storage="_DangKies", ThisKey="maHocKy", OtherKey="maHocKy")]
		public EntitySet<DangKy> DangKies
		{
			get
			{
				return this._DangKies;
			}
			set
			{
				this._DangKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_DiemRenLuyen", Storage="_DiemRenLuyens", ThisKey="maHocKy", OtherKey="maHocKy")]
		public EntitySet<DiemRenLuyen> DiemRenLuyens
		{
			get
			{
				return this._DiemRenLuyens;
			}
			set
			{
				this._DiemRenLuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_SinhVienViPham", Storage="_SinhVienViPhams", ThisKey="maHocKy", OtherKey="maHocKy")]
		public EntitySet<SinhVienViPham> SinhVienViPhams
		{
			get
			{
				return this._SinhVienViPhams;
			}
			set
			{
				this._SinhVienViPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKies(DangKy entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_DangKies(DangKy entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
		
		private void attach_DiemRenLuyens(DiemRenLuyen entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_DiemRenLuyens(DiemRenLuyen entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
		
		private void attach_SinhVienViPhams(SinhVienViPham entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_SinhVienViPhams(SinhVienViPham entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocPhan")]
	public partial class HocPhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maHocPhan;
		
		private string _tenHocPhan;
		
		private int _soTinChi;
		
		private EntitySet<DangKy> _DangKies;
		
		private EntitySet<HocPhi> _HocPhis;
		
		private EntitySet<PhanCongGiangVien> _PhanCongGiangViens;
		
		private EntitySet<SinhVienViPham> _SinhVienViPhams;
		
		private EntitySet<ThoiKhoaBieu> _ThoiKhoaBieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHocPhanChanging(string value);
    partial void OnmaHocPhanChanged();
    partial void OntenHocPhanChanging(string value);
    partial void OntenHocPhanChanged();
    partial void OnsoTinChiChanging(int value);
    partial void OnsoTinChiChanged();
    #endregion
		
		public HocPhan()
		{
			this._DangKies = new EntitySet<DangKy>(new Action<DangKy>(this.attach_DangKies), new Action<DangKy>(this.detach_DangKies));
			this._HocPhis = new EntitySet<HocPhi>(new Action<HocPhi>(this.attach_HocPhis), new Action<HocPhi>(this.detach_HocPhis));
			this._PhanCongGiangViens = new EntitySet<PhanCongGiangVien>(new Action<PhanCongGiangVien>(this.attach_PhanCongGiangViens), new Action<PhanCongGiangVien>(this.detach_PhanCongGiangViens));
			this._SinhVienViPhams = new EntitySet<SinhVienViPham>(new Action<SinhVienViPham>(this.attach_SinhVienViPhams), new Action<SinhVienViPham>(this.detach_SinhVienViPhams));
			this._ThoiKhoaBieus = new EntitySet<ThoiKhoaBieu>(new Action<ThoiKhoaBieu>(this.attach_ThoiKhoaBieus), new Action<ThoiKhoaBieu>(this.detach_ThoiKhoaBieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHocPhan", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maHocPhan
		{
			get
			{
				return this._maHocPhan;
			}
			set
			{
				if ((this._maHocPhan != value))
				{
					this.OnmaHocPhanChanging(value);
					this.SendPropertyChanging();
					this._maHocPhan = value;
					this.SendPropertyChanged("maHocPhan");
					this.OnmaHocPhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenHocPhan", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tenHocPhan
		{
			get
			{
				return this._tenHocPhan;
			}
			set
			{
				if ((this._tenHocPhan != value))
				{
					this.OntenHocPhanChanging(value);
					this.SendPropertyChanging();
					this._tenHocPhan = value;
					this.SendPropertyChanged("tenHocPhan");
					this.OntenHocPhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soTinChi", DbType="Int NOT NULL")]
		public int soTinChi
		{
			get
			{
				return this._soTinChi;
			}
			set
			{
				if ((this._soTinChi != value))
				{
					this.OnsoTinChiChanging(value);
					this.SendPropertyChanging();
					this._soTinChi = value;
					this.SendPropertyChanged("soTinChi");
					this.OnsoTinChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocPhan_DangKy", Storage="_DangKies", ThisKey="maHocPhan", OtherKey="maHocPhan")]
		public EntitySet<DangKy> DangKies
		{
			get
			{
				return this._DangKies;
			}
			set
			{
				this._DangKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocPhan_HocPhi", Storage="_HocPhis", ThisKey="maHocPhan", OtherKey="maHocPhan")]
		public EntitySet<HocPhi> HocPhis
		{
			get
			{
				return this._HocPhis;
			}
			set
			{
				this._HocPhis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocPhan_PhanCongGiangVien", Storage="_PhanCongGiangViens", ThisKey="maHocPhan", OtherKey="maHocPhan")]
		public EntitySet<PhanCongGiangVien> PhanCongGiangViens
		{
			get
			{
				return this._PhanCongGiangViens;
			}
			set
			{
				this._PhanCongGiangViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocPhan_SinhVienViPham", Storage="_SinhVienViPhams", ThisKey="maHocPhan", OtherKey="maHocPhan")]
		public EntitySet<SinhVienViPham> SinhVienViPhams
		{
			get
			{
				return this._SinhVienViPhams;
			}
			set
			{
				this._SinhVienViPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocPhan_ThoiKhoaBieu", Storage="_ThoiKhoaBieus", ThisKey="maHocPhan", OtherKey="maHocPhan")]
		public EntitySet<ThoiKhoaBieu> ThoiKhoaBieus
		{
			get
			{
				return this._ThoiKhoaBieus;
			}
			set
			{
				this._ThoiKhoaBieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKies(DangKy entity)
		{
			this.SendPropertyChanging();
			entity.HocPhan = this;
		}
		
		private void detach_DangKies(DangKy entity)
		{
			this.SendPropertyChanging();
			entity.HocPhan = null;
		}
		
		private void attach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.HocPhan = this;
		}
		
		private void detach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.HocPhan = null;
		}
		
		private void attach_PhanCongGiangViens(PhanCongGiangVien entity)
		{
			this.SendPropertyChanging();
			entity.HocPhan = this;
		}
		
		private void detach_PhanCongGiangViens(PhanCongGiangVien entity)
		{
			this.SendPropertyChanging();
			entity.HocPhan = null;
		}
		
		private void attach_SinhVienViPhams(SinhVienViPham entity)
		{
			this.SendPropertyChanging();
			entity.HocPhan = this;
		}
		
		private void detach_SinhVienViPhams(SinhVienViPham entity)
		{
			this.SendPropertyChanging();
			entity.HocPhan = null;
		}
		
		private void attach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.HocPhan = this;
		}
		
		private void detach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.HocPhan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocPhi")]
	public partial class HocPhi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maHocPhi;
		
		private string _maSv;
		
		private string _maHocPhan;
		
		private int _soTinChi;
		
		private int _donGia;
		
		private System.Nullable<int> _tongTien;
		
		private string _trangThai;
		
		private EntityRef<HocPhan> _HocPhan;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHocPhiChanging(string value);
    partial void OnmaHocPhiChanged();
    partial void OnmaSvChanging(string value);
    partial void OnmaSvChanged();
    partial void OnmaHocPhanChanging(string value);
    partial void OnmaHocPhanChanged();
    partial void OnsoTinChiChanging(int value);
    partial void OnsoTinChiChanged();
    partial void OndonGiaChanging(int value);
    partial void OndonGiaChanged();
    partial void OntongTienChanging(System.Nullable<int> value);
    partial void OntongTienChanged();
    partial void OntrangThaiChanging(string value);
    partial void OntrangThaiChanged();
    #endregion
		
		public HocPhi()
		{
			this._HocPhan = default(EntityRef<HocPhan>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHocPhi", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maHocPhi
		{
			get
			{
				return this._maHocPhi;
			}
			set
			{
				if ((this._maHocPhi != value))
				{
					this.OnmaHocPhiChanging(value);
					this.SendPropertyChanging();
					this._maHocPhi = value;
					this.SendPropertyChanged("maHocPhi");
					this.OnmaHocPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSv", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string maSv
		{
			get
			{
				return this._maSv;
			}
			set
			{
				if ((this._maSv != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSvChanging(value);
					this.SendPropertyChanging();
					this._maSv = value;
					this.SendPropertyChanged("maSv");
					this.OnmaSvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHocPhan", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string maHocPhan
		{
			get
			{
				return this._maHocPhan;
			}
			set
			{
				if ((this._maHocPhan != value))
				{
					if (this._HocPhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHocPhanChanging(value);
					this.SendPropertyChanging();
					this._maHocPhan = value;
					this.SendPropertyChanged("maHocPhan");
					this.OnmaHocPhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soTinChi", DbType="Int NOT NULL")]
		public int soTinChi
		{
			get
			{
				return this._soTinChi;
			}
			set
			{
				if ((this._soTinChi != value))
				{
					this.OnsoTinChiChanging(value);
					this.SendPropertyChanging();
					this._soTinChi = value;
					this.SendPropertyChanged("soTinChi");
					this.OnsoTinChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donGia", DbType="Int NOT NULL")]
		public int donGia
		{
			get
			{
				return this._donGia;
			}
			set
			{
				if ((this._donGia != value))
				{
					this.OndonGiaChanging(value);
					this.SendPropertyChanging();
					this._donGia = value;
					this.SendPropertyChanged("donGia");
					this.OndonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongTien", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> tongTien
		{
			get
			{
				return this._tongTien;
			}
			set
			{
				if ((this._tongTien != value))
				{
					this.OntongTienChanging(value);
					this.SendPropertyChanging();
					this._tongTien = value;
					this.SendPropertyChanged("tongTien");
					this.OntongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="NVarChar(50)")]
		public string trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocPhan_HocPhi", Storage="_HocPhan", ThisKey="maHocPhan", OtherKey="maHocPhan", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HocPhan HocPhan
		{
			get
			{
				return this._HocPhan.Entity;
			}
			set
			{
				HocPhan previousValue = this._HocPhan.Entity;
				if (((previousValue != value) 
							|| (this._HocPhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocPhan.Entity = null;
						previousValue.HocPhis.Remove(this);
					}
					this._HocPhan.Entity = value;
					if ((value != null))
					{
						value.HocPhis.Add(this);
						this._maHocPhan = value.maHocPhan;
					}
					else
					{
						this._maHocPhan = default(string);
					}
					this.SendPropertyChanged("HocPhan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_HocPhi", Storage="_SinhVien", ThisKey="maSv", OtherKey="maSv", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.HocPhis.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.HocPhis.Add(this);
						this._maSv = value.maSv;
					}
					else
					{
						this._maSv = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoa")]
	public partial class Khoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maKhoa;
		
		private string _tenKhoa;
		
		private EntitySet<GiangVien> _GiangViens;
		
		private EntitySet<Nganh> _Nganhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKhoaChanging(string value);
    partial void OnmaKhoaChanged();
    partial void OntenKhoaChanging(string value);
    partial void OntenKhoaChanged();
    #endregion
		
		public Khoa()
		{
			this._GiangViens = new EntitySet<GiangVien>(new Action<GiangVien>(this.attach_GiangViens), new Action<GiangVien>(this.detach_GiangViens));
			this._Nganhs = new EntitySet<Nganh>(new Action<Nganh>(this.attach_Nganhs), new Action<Nganh>(this.detach_Nganhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoa", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maKhoa
		{
			get
			{
				return this._maKhoa;
			}
			set
			{
				if ((this._maKhoa != value))
				{
					this.OnmaKhoaChanging(value);
					this.SendPropertyChanging();
					this._maKhoa = value;
					this.SendPropertyChanged("maKhoa");
					this.OnmaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenKhoa", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tenKhoa
		{
			get
			{
				return this._tenKhoa;
			}
			set
			{
				if ((this._tenKhoa != value))
				{
					this.OntenKhoaChanging(value);
					this.SendPropertyChanging();
					this._tenKhoa = value;
					this.SendPropertyChanged("tenKhoa");
					this.OntenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_GiangVien", Storage="_GiangViens", ThisKey="maKhoa", OtherKey="maKhoa")]
		public EntitySet<GiangVien> GiangViens
		{
			get
			{
				return this._GiangViens;
			}
			set
			{
				this._GiangViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Nganh", Storage="_Nganhs", ThisKey="maKhoa", OtherKey="maKhoa")]
		public EntitySet<Nganh> Nganhs
		{
			get
			{
				return this._Nganhs;
			}
			set
			{
				this._Nganhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiangViens(GiangVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_GiangViens(GiangVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
		
		private void attach_Nganhs(Nganh entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_Nganhs(Nganh entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
	public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maLop;
		
		private string _tenLop;
		
		private string _maNganh;
		
		private string _maGiangVien;
		
		private string _khoaHoc;
		
		private EntitySet<SinhVien> _SinhViens;
		
		private EntityRef<GiangVien> _GiangVien;
		
		private EntityRef<Nganh> _Nganh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaLopChanging(string value);
    partial void OnmaLopChanged();
    partial void OntenLopChanging(string value);
    partial void OntenLopChanged();
    partial void OnmaNganhChanging(string value);
    partial void OnmaNganhChanged();
    partial void OnmaGiangVienChanging(string value);
    partial void OnmaGiangVienChanged();
    partial void OnkhoaHocChanging(string value);
    partial void OnkhoaHocChanged();
    #endregion
		
		public LopHoc()
		{
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			this._GiangVien = default(EntityRef<GiangVien>);
			this._Nganh = default(EntityRef<Nganh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLop", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maLop
		{
			get
			{
				return this._maLop;
			}
			set
			{
				if ((this._maLop != value))
				{
					this.OnmaLopChanging(value);
					this.SendPropertyChanging();
					this._maLop = value;
					this.SendPropertyChanged("maLop");
					this.OnmaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLop", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tenLop
		{
			get
			{
				return this._tenLop;
			}
			set
			{
				if ((this._tenLop != value))
				{
					this.OntenLopChanging(value);
					this.SendPropertyChanging();
					this._tenLop = value;
					this.SendPropertyChanged("tenLop");
					this.OntenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNganh", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string maNganh
		{
			get
			{
				return this._maNganh;
			}
			set
			{
				if ((this._maNganh != value))
				{
					if (this._Nganh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNganhChanging(value);
					this.SendPropertyChanging();
					this._maNganh = value;
					this.SendPropertyChanged("maNganh");
					this.OnmaNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maGiangVien", DbType="Char(10)")]
		public string maGiangVien
		{
			get
			{
				return this._maGiangVien;
			}
			set
			{
				if ((this._maGiangVien != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaGiangVienChanging(value);
					this.SendPropertyChanging();
					this._maGiangVien = value;
					this.SendPropertyChanged("maGiangVien");
					this.OnmaGiangVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_khoaHoc", DbType="NVarChar(50)")]
		public string khoaHoc
		{
			get
			{
				return this._khoaHoc;
			}
			set
			{
				if ((this._khoaHoc != value))
				{
					this.OnkhoaHocChanging(value);
					this.SendPropertyChanging();
					this._khoaHoc = value;
					this.SendPropertyChanged("khoaHoc");
					this.OnkhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_SinhVien", Storage="_SinhViens", ThisKey="maLop", OtherKey="lophoc")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_LopHoc", Storage="_GiangVien", ThisKey="maGiangVien", OtherKey="maGiangVien", IsForeignKey=true)]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._maGiangVien = value.maGiangVien;
					}
					else
					{
						this._maGiangVien = default(string);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nganh_LopHoc", Storage="_Nganh", ThisKey="maNganh", OtherKey="maNganh", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Nganh Nganh
		{
			get
			{
				return this._Nganh.Entity;
			}
			set
			{
				Nganh previousValue = this._Nganh.Entity;
				if (((previousValue != value) 
							|| (this._Nganh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nganh.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._Nganh.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._maNganh = value.maNganh;
					}
					else
					{
						this._maNganh = default(string);
					}
					this.SendPropertyChanged("Nganh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc1 = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nganh")]
	public partial class Nganh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maNganh;
		
		private string _tenNganh;
		
		private string _maKhoa;
		
		private string _heDaoTao;
		
		private int _soNamHoc;
		
		private EntitySet<LopHoc> _LopHocs;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNganhChanging(string value);
    partial void OnmaNganhChanged();
    partial void OntenNganhChanging(string value);
    partial void OntenNganhChanged();
    partial void OnmaKhoaChanging(string value);
    partial void OnmaKhoaChanged();
    partial void OnheDaoTaoChanging(string value);
    partial void OnheDaoTaoChanged();
    partial void OnsoNamHocChanging(int value);
    partial void OnsoNamHocChanged();
    #endregion
		
		public Nganh()
		{
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNganh", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maNganh
		{
			get
			{
				return this._maNganh;
			}
			set
			{
				if ((this._maNganh != value))
				{
					this.OnmaNganhChanging(value);
					this.SendPropertyChanging();
					this._maNganh = value;
					this.SendPropertyChanged("maNganh");
					this.OnmaNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNganh", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tenNganh
		{
			get
			{
				return this._tenNganh;
			}
			set
			{
				if ((this._tenNganh != value))
				{
					this.OntenNganhChanging(value);
					this.SendPropertyChanging();
					this._tenNganh = value;
					this.SendPropertyChanged("tenNganh");
					this.OntenNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoa", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string maKhoa
		{
			get
			{
				return this._maKhoa;
			}
			set
			{
				if ((this._maKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhoaChanging(value);
					this.SendPropertyChanging();
					this._maKhoa = value;
					this.SendPropertyChanged("maKhoa");
					this.OnmaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heDaoTao", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string heDaoTao
		{
			get
			{
				return this._heDaoTao;
			}
			set
			{
				if ((this._heDaoTao != value))
				{
					this.OnheDaoTaoChanging(value);
					this.SendPropertyChanging();
					this._heDaoTao = value;
					this.SendPropertyChanged("heDaoTao");
					this.OnheDaoTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soNamHoc", DbType="Int NOT NULL")]
		public int soNamHoc
		{
			get
			{
				return this._soNamHoc;
			}
			set
			{
				if ((this._soNamHoc != value))
				{
					this.OnsoNamHocChanging(value);
					this.SendPropertyChanging();
					this._soNamHoc = value;
					this.SendPropertyChanged("soNamHoc");
					this.OnsoNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nganh_LopHoc", Storage="_LopHocs", ThisKey="maNganh", OtherKey="maNganh")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Nganh", Storage="_Khoa", ThisKey="maKhoa", OtherKey="maKhoa", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.Nganhs.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.Nganhs.Add(this);
						this._maKhoa = value.maKhoa;
					}
					else
					{
						this._maKhoa = default(string);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.Nganh = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.Nganh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanCongGiangVien")]
	public partial class PhanCongGiangVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maHocPhan;
		
		private string _maGiangVien;
		
		private EntityRef<GiangVien> _GiangVien;
		
		private EntityRef<HocPhan> _HocPhan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHocPhanChanging(string value);
    partial void OnmaHocPhanChanged();
    partial void OnmaGiangVienChanging(string value);
    partial void OnmaGiangVienChanged();
    #endregion
		
		public PhanCongGiangVien()
		{
			this._GiangVien = default(EntityRef<GiangVien>);
			this._HocPhan = default(EntityRef<HocPhan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHocPhan", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maHocPhan
		{
			get
			{
				return this._maHocPhan;
			}
			set
			{
				if ((this._maHocPhan != value))
				{
					if (this._HocPhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHocPhanChanging(value);
					this.SendPropertyChanging();
					this._maHocPhan = value;
					this.SendPropertyChanged("maHocPhan");
					this.OnmaHocPhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maGiangVien", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maGiangVien
		{
			get
			{
				return this._maGiangVien;
			}
			set
			{
				if ((this._maGiangVien != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaGiangVienChanging(value);
					this.SendPropertyChanging();
					this._maGiangVien = value;
					this.SendPropertyChanged("maGiangVien");
					this.OnmaGiangVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_PhanCongGiangVien", Storage="_GiangVien", ThisKey="maGiangVien", OtherKey="maGiangVien", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.PhanCongGiangViens.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.PhanCongGiangViens.Add(this);
						this._maGiangVien = value.maGiangVien;
					}
					else
					{
						this._maGiangVien = default(string);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocPhan_PhanCongGiangVien", Storage="_HocPhan", ThisKey="maHocPhan", OtherKey="maHocPhan", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HocPhan HocPhan
		{
			get
			{
				return this._HocPhan.Entity;
			}
			set
			{
				HocPhan previousValue = this._HocPhan.Entity;
				if (((previousValue != value) 
							|| (this._HocPhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocPhan.Entity = null;
						previousValue.PhanCongGiangViens.Remove(this);
					}
					this._HocPhan.Entity = value;
					if ((value != null))
					{
						value.PhanCongGiangViens.Add(this);
						this._maHocPhan = value.maHocPhan;
					}
					else
					{
						this._maHocPhan = default(string);
					}
					this.SendPropertyChanged("HocPhan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maSv;
		
		private string _hoTen;
		
		private System.DateTime _ngaySinh;
		
		private string _gioiTinh;
		
		private string _email;
		
		private string _sdt;
		
		private string _diaChi;
		
		private string _lophoc;
		
		private string _account;
		
		private EntitySet<DangKy> _DangKies;
		
		private EntitySet<DiemRenLuyen> _DiemRenLuyens;
		
		private EntitySet<HocPhi> _HocPhis;
		
		private EntitySet<SinhVienViPham> _SinhVienViPhams;
		
		private EntityRef<Account> _Account1;
		
		private EntityRef<LopHoc> _LopHoc1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSvChanging(string value);
    partial void OnmaSvChanged();
    partial void OnhoTenChanging(string value);
    partial void OnhoTenChanged();
    partial void OnngaySinhChanging(System.DateTime value);
    partial void OnngaySinhChanged();
    partial void OngioiTinhChanging(string value);
    partial void OngioiTinhChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OnlophocChanging(string value);
    partial void OnlophocChanged();
    partial void OnaccountChanging(string value);
    partial void OnaccountChanged();
    #endregion
		
		public SinhVien()
		{
			this._DangKies = new EntitySet<DangKy>(new Action<DangKy>(this.attach_DangKies), new Action<DangKy>(this.detach_DangKies));
			this._DiemRenLuyens = new EntitySet<DiemRenLuyen>(new Action<DiemRenLuyen>(this.attach_DiemRenLuyens), new Action<DiemRenLuyen>(this.detach_DiemRenLuyens));
			this._HocPhis = new EntitySet<HocPhi>(new Action<HocPhi>(this.attach_HocPhis), new Action<HocPhi>(this.detach_HocPhis));
			this._SinhVienViPhams = new EntitySet<SinhVienViPham>(new Action<SinhVienViPham>(this.attach_SinhVienViPhams), new Action<SinhVienViPham>(this.detach_SinhVienViPhams));
			this._Account1 = default(EntityRef<Account>);
			this._LopHoc1 = default(EntityRef<LopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSv", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maSv
		{
			get
			{
				return this._maSv;
			}
			set
			{
				if ((this._maSv != value))
				{
					this.OnmaSvChanging(value);
					this.SendPropertyChanging();
					this._maSv = value;
					this.SendPropertyChanged("maSv");
					this.OnmaSvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string hoTen
		{
			get
			{
				return this._hoTen;
			}
			set
			{
				if ((this._hoTen != value))
				{
					this.OnhoTenChanging(value);
					this.SendPropertyChanging();
					this._hoTen = value;
					this.SendPropertyChanged("hoTen");
					this.OnhoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaySinh", DbType="Date NOT NULL")]
		public System.DateTime ngaySinh
		{
			get
			{
				return this._ngaySinh;
			}
			set
			{
				if ((this._ngaySinh != value))
				{
					this.OnngaySinhChanging(value);
					this.SendPropertyChanging();
					this._ngaySinh = value;
					this.SendPropertyChanged("ngaySinh");
					this.OnngaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="NVarChar(10)")]
		public string gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(250)")]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lophoc", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string lophoc
		{
			get
			{
				return this._lophoc;
			}
			set
			{
				if ((this._lophoc != value))
				{
					if (this._LopHoc1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlophocChanging(value);
					this.SendPropertyChanging();
					this._lophoc = value;
					this.SendPropertyChanged("lophoc");
					this.OnlophocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account", DbType="Char(10)")]
		public string account
		{
			get
			{
				return this._account;
			}
			set
			{
				if ((this._account != value))
				{
					if (this._Account1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccountChanging(value);
					this.SendPropertyChanging();
					this._account = value;
					this.SendPropertyChanged("account");
					this.OnaccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DangKy", Storage="_DangKies", ThisKey="maSv", OtherKey="maSv")]
		public EntitySet<DangKy> DangKies
		{
			get
			{
				return this._DangKies;
			}
			set
			{
				this._DangKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_DiemRenLuyen", Storage="_DiemRenLuyens", ThisKey="maSv", OtherKey="maSv")]
		public EntitySet<DiemRenLuyen> DiemRenLuyens
		{
			get
			{
				return this._DiemRenLuyens;
			}
			set
			{
				this._DiemRenLuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_HocPhi", Storage="_HocPhis", ThisKey="maSv", OtherKey="maSv")]
		public EntitySet<HocPhi> HocPhis
		{
			get
			{
				return this._HocPhis;
			}
			set
			{
				this._HocPhis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SinhVienViPham", Storage="_SinhVienViPhams", ThisKey="maSv", OtherKey="maSv")]
		public EntitySet<SinhVienViPham> SinhVienViPhams
		{
			get
			{
				return this._SinhVienViPhams;
			}
			set
			{
				this._SinhVienViPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SinhVien", Storage="_Account1", ThisKey="account", OtherKey="maAccount", IsForeignKey=true, DeleteRule="SET NULL")]
		public Account Account1
		{
			get
			{
				return this._Account1.Entity;
			}
			set
			{
				Account previousValue = this._Account1.Entity;
				if (((previousValue != value) 
							|| (this._Account1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account1.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._Account1.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._account = value.maAccount;
					}
					else
					{
						this._account = default(string);
					}
					this.SendPropertyChanged("Account1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_SinhVien", Storage="_LopHoc1", ThisKey="lophoc", OtherKey="maLop", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LopHoc LopHoc1
		{
			get
			{
				return this._LopHoc1.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc1.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc1.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._LopHoc1.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._lophoc = value.maLop;
					}
					else
					{
						this._lophoc = default(string);
					}
					this.SendPropertyChanged("LopHoc1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKies(DangKy entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_DangKies(DangKy entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_DiemRenLuyens(DiemRenLuyen entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_DiemRenLuyens(DiemRenLuyen entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_HocPhis(HocPhi entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_SinhVienViPhams(SinhVienViPham entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_SinhVienViPhams(SinhVienViPham entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVienViPham")]
	public partial class SinhVienViPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maViPham;
		
		private string _maSv;
		
		private string _maHocKy;
		
		private string _maHocPhan;
		
		private System.DateTime _ngayViPham;
		
		private string _loaiViPham;
		
		private string _moTa;
		
		private string _hinhThucXuLy;
		
		private EntityRef<HocKy> _HocKy;
		
		private EntityRef<HocPhan> _HocPhan;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaViPhamChanging(string value);
    partial void OnmaViPhamChanged();
    partial void OnmaSvChanging(string value);
    partial void OnmaSvChanged();
    partial void OnmaHocKyChanging(string value);
    partial void OnmaHocKyChanged();
    partial void OnmaHocPhanChanging(string value);
    partial void OnmaHocPhanChanged();
    partial void OnngayViPhamChanging(System.DateTime value);
    partial void OnngayViPhamChanged();
    partial void OnloaiViPhamChanging(string value);
    partial void OnloaiViPhamChanged();
    partial void OnmoTaChanging(string value);
    partial void OnmoTaChanged();
    partial void OnhinhThucXuLyChanging(string value);
    partial void OnhinhThucXuLyChanged();
    #endregion
		
		public SinhVienViPham()
		{
			this._HocKy = default(EntityRef<HocKy>);
			this._HocPhan = default(EntityRef<HocPhan>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maViPham", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maViPham
		{
			get
			{
				return this._maViPham;
			}
			set
			{
				if ((this._maViPham != value))
				{
					this.OnmaViPhamChanging(value);
					this.SendPropertyChanging();
					this._maViPham = value;
					this.SendPropertyChanged("maViPham");
					this.OnmaViPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSv", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string maSv
		{
			get
			{
				return this._maSv;
			}
			set
			{
				if ((this._maSv != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSvChanging(value);
					this.SendPropertyChanging();
					this._maSv = value;
					this.SendPropertyChanged("maSv");
					this.OnmaSvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHocKy", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string maHocKy
		{
			get
			{
				return this._maHocKy;
			}
			set
			{
				if ((this._maHocKy != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHocKyChanging(value);
					this.SendPropertyChanging();
					this._maHocKy = value;
					this.SendPropertyChanged("maHocKy");
					this.OnmaHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHocPhan", DbType="Char(10)")]
		public string maHocPhan
		{
			get
			{
				return this._maHocPhan;
			}
			set
			{
				if ((this._maHocPhan != value))
				{
					if (this._HocPhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHocPhanChanging(value);
					this.SendPropertyChanging();
					this._maHocPhan = value;
					this.SendPropertyChanged("maHocPhan");
					this.OnmaHocPhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayViPham", DbType="Date NOT NULL")]
		public System.DateTime ngayViPham
		{
			get
			{
				return this._ngayViPham;
			}
			set
			{
				if ((this._ngayViPham != value))
				{
					this.OnngayViPhamChanging(value);
					this.SendPropertyChanging();
					this._ngayViPham = value;
					this.SendPropertyChanged("ngayViPham");
					this.OnngayViPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaiViPham", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string loaiViPham
		{
			get
			{
				return this._loaiViPham;
			}
			set
			{
				if ((this._loaiViPham != value))
				{
					this.OnloaiViPhamChanging(value);
					this.SendPropertyChanging();
					this._loaiViPham = value;
					this.SendPropertyChanged("loaiViPham");
					this.OnloaiViPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moTa", DbType="NVarChar(500)")]
		public string moTa
		{
			get
			{
				return this._moTa;
			}
			set
			{
				if ((this._moTa != value))
				{
					this.OnmoTaChanging(value);
					this.SendPropertyChanging();
					this._moTa = value;
					this.SendPropertyChanged("moTa");
					this.OnmoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hinhThucXuLy", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string hinhThucXuLy
		{
			get
			{
				return this._hinhThucXuLy;
			}
			set
			{
				if ((this._hinhThucXuLy != value))
				{
					this.OnhinhThucXuLyChanging(value);
					this.SendPropertyChanging();
					this._hinhThucXuLy = value;
					this.SendPropertyChanged("hinhThucXuLy");
					this.OnhinhThucXuLyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_SinhVienViPham", Storage="_HocKy", ThisKey="maHocKy", OtherKey="maHocKy", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.SinhVienViPhams.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.SinhVienViPhams.Add(this);
						this._maHocKy = value.maHocKy;
					}
					else
					{
						this._maHocKy = default(string);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocPhan_SinhVienViPham", Storage="_HocPhan", ThisKey="maHocPhan", OtherKey="maHocPhan", IsForeignKey=true, DeleteRule="CASCADE")]
		public HocPhan HocPhan
		{
			get
			{
				return this._HocPhan.Entity;
			}
			set
			{
				HocPhan previousValue = this._HocPhan.Entity;
				if (((previousValue != value) 
							|| (this._HocPhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocPhan.Entity = null;
						previousValue.SinhVienViPhams.Remove(this);
					}
					this._HocPhan.Entity = value;
					if ((value != null))
					{
						value.SinhVienViPhams.Add(this);
						this._maHocPhan = value.maHocPhan;
					}
					else
					{
						this._maHocPhan = default(string);
					}
					this.SendPropertyChanged("HocPhan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SinhVienViPham", Storage="_SinhVien", ThisKey="maSv", OtherKey="maSv", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.SinhVienViPhams.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.SinhVienViPhams.Add(this);
						this._maSv = value.maSv;
					}
					else
					{
						this._maSv = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThoiKhoaBieu")]
	public partial class ThoiKhoaBieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maTKB;
		
		private string _maHocPhan;
		
		private System.DateTime _ngayHoc;
		
		private System.TimeSpan _gioBatDau;
		
		private System.TimeSpan _gioKetThuc;
		
		private int _tietBatDau;
		
		private int _tietKetThuc;
		
		private EntityRef<HocPhan> _HocPhan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaTKBChanging(string value);
    partial void OnmaTKBChanged();
    partial void OnmaHocPhanChanging(string value);
    partial void OnmaHocPhanChanged();
    partial void OnngayHocChanging(System.DateTime value);
    partial void OnngayHocChanged();
    partial void OngioBatDauChanging(System.TimeSpan value);
    partial void OngioBatDauChanged();
    partial void OngioKetThucChanging(System.TimeSpan value);
    partial void OngioKetThucChanged();
    partial void OntietBatDauChanging(int value);
    partial void OntietBatDauChanged();
    partial void OntietKetThucChanging(int value);
    partial void OntietKetThucChanged();
    #endregion
		
		public ThoiKhoaBieu()
		{
			this._HocPhan = default(EntityRef<HocPhan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTKB", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maTKB
		{
			get
			{
				return this._maTKB;
			}
			set
			{
				if ((this._maTKB != value))
				{
					this.OnmaTKBChanging(value);
					this.SendPropertyChanging();
					this._maTKB = value;
					this.SendPropertyChanged("maTKB");
					this.OnmaTKBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHocPhan", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string maHocPhan
		{
			get
			{
				return this._maHocPhan;
			}
			set
			{
				if ((this._maHocPhan != value))
				{
					if (this._HocPhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHocPhanChanging(value);
					this.SendPropertyChanging();
					this._maHocPhan = value;
					this.SendPropertyChanged("maHocPhan");
					this.OnmaHocPhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayHoc", DbType="Date NOT NULL")]
		public System.DateTime ngayHoc
		{
			get
			{
				return this._ngayHoc;
			}
			set
			{
				if ((this._ngayHoc != value))
				{
					this.OnngayHocChanging(value);
					this.SendPropertyChanging();
					this._ngayHoc = value;
					this.SendPropertyChanged("ngayHoc");
					this.OnngayHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioBatDau", DbType="Time NOT NULL")]
		public System.TimeSpan gioBatDau
		{
			get
			{
				return this._gioBatDau;
			}
			set
			{
				if ((this._gioBatDau != value))
				{
					this.OngioBatDauChanging(value);
					this.SendPropertyChanging();
					this._gioBatDau = value;
					this.SendPropertyChanged("gioBatDau");
					this.OngioBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioKetThuc", DbType="Time NOT NULL")]
		public System.TimeSpan gioKetThuc
		{
			get
			{
				return this._gioKetThuc;
			}
			set
			{
				if ((this._gioKetThuc != value))
				{
					this.OngioKetThucChanging(value);
					this.SendPropertyChanging();
					this._gioKetThuc = value;
					this.SendPropertyChanged("gioKetThuc");
					this.OngioKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tietBatDau", DbType="Int NOT NULL")]
		public int tietBatDau
		{
			get
			{
				return this._tietBatDau;
			}
			set
			{
				if ((this._tietBatDau != value))
				{
					this.OntietBatDauChanging(value);
					this.SendPropertyChanging();
					this._tietBatDau = value;
					this.SendPropertyChanged("tietBatDau");
					this.OntietBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tietKetThuc", DbType="Int NOT NULL")]
		public int tietKetThuc
		{
			get
			{
				return this._tietKetThuc;
			}
			set
			{
				if ((this._tietKetThuc != value))
				{
					this.OntietKetThucChanging(value);
					this.SendPropertyChanging();
					this._tietKetThuc = value;
					this.SendPropertyChanged("tietKetThuc");
					this.OntietKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocPhan_ThoiKhoaBieu", Storage="_HocPhan", ThisKey="maHocPhan", OtherKey="maHocPhan", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HocPhan HocPhan
		{
			get
			{
				return this._HocPhan.Entity;
			}
			set
			{
				HocPhan previousValue = this._HocPhan.Entity;
				if (((previousValue != value) 
							|| (this._HocPhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocPhan.Entity = null;
						previousValue.ThoiKhoaBieus.Remove(this);
					}
					this._HocPhan.Entity = value;
					if ((value != null))
					{
						value.ThoiKhoaBieus.Add(this);
						this._maHocPhan = value.maHocPhan;
					}
					else
					{
						this._maHocPhan = default(string);
					}
					this.SendPropertyChanged("HocPhan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
